import streamlit as st
from ultralytics import YOLO
import cv2
from PIL import Image
import numpy as np
import tempfile
import os

# Title
st.title("üöó Car Defect Detection with YOLOv8")

# Load model
@st.cache_resource
def load_model():
    return YOLO("best.pt")  # Make sure best.pt is in same folder as app.py

model = load_model()

# Upload image
uploaded_file = st.file_uploader("Upload a car image", type=["jpg", "jpeg", "png"])

if uploaded_file:
    st.image(uploaded_file, caption="Uploaded Image", use_column_width=True)

    # Save to a temp file
    with tempfile.NamedTemporaryFile(delete=False, suffix=".jpg") as temp_file:
        temp_file.write(uploaded_file.read())
        temp_path = temp_file.name

    # Predict
    results = model.predict(source=temp_path, imgsz=640, conf=0.5)
    result = results[0]

    # Show prediction
    plotted_img = result.plot()
    plotted_img = cv2.cvtColor(plotted_img, cv2.COLOR_BGR2RGB)
    st.image(plotted_img, caption="Detected Defects", use_column_width=True)

    # Defect count
    defect_counts = {}
    for box in result.boxes:
        class_id = int(box.cls)
        class_name = model.names[class_id]
        defect_counts[class_name] = defect_counts.get(class_name, 0) + 1

    st.subheader("üîç Defect Summary")
    for defect, count in defect_counts.items():
        st.write(f"**{defect}**: {count}")
    st.write(f"**Total Defects Detected:** {sum(defect_counts.values())}")
